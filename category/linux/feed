<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>wklken's blog</title><link>http://wklken.me/</link><description></description><atom:link href="/category/linux/feed" rel="self"></atom:link><lastBuildDate>Tue, 11 Jun 2013 00:00:00 +0800</lastBuildDate><item><title>我的vim配置及说明【k-vim】</title><link>http://wklken.me/posts/2013/06/11/linux-my-vim.html</link><description>&lt;p&gt;ps: k-vim github地址 : https://github.com/wklken/k-vim&lt;/p&gt;
&lt;h3&gt;vim插件分类及快捷键&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;给人一条Vim 命令，他能折腾一晚上；告诉他怎么自定义Vim 命令，他能捣腾一辈子&lt;/p&gt;
&lt;p&gt;生命不息,折腾不止 (╯‵□′)╯︵┻━┻)&lt;/p&gt;
&lt;p&gt;编辑器之神 = 生产力(效率为王) + 性感(界面快捷键) + 装x神器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;vim基本用法&lt;/h3&gt;
&lt;p&gt;初学者: &lt;a href="http://blog.csdn.net/wklken/article/details/7533272"&gt;vim训练稿&lt;/a&gt;
几年前的三月份,第一次正儿八经开始使用vim,后来整理了一份,对着敲几遍,训练稿&lt;/p&gt;
&lt;p&gt;推荐: 耗子叔的 &lt;a href="http://coolshell.cn/articles/5426.html"&gt;简明vim练级攻略&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;或者,玩游戏 &lt;a href="http://vim-adventures.com/"&gt;vim大冒险&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;使用说明&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;能熟练使用原生vim,最好先熟悉了再来使用插件扩展&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以下插件,仅介绍用途优点等,可以在github中搜索查看详细用途和配置&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当前vim使用配置,在vimrc中查看&lt;/p&gt;
&lt;p&gt;快捷键为插件默认/或者当前配置vimrc定义的,如果需要修改,查看vimrc中对插件配置进行修改 [sd]标记的为自定义 [d]标记的为默认快捷键&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由于平时会使用python和golang,所以语言方面的配置偏向于这两个&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其它的可以参照网上配置(通用的插件可以配置,其他具体语言插件可以自己配置加入)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;fork一份&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;根据自己使用的语言，自身习惯进行修改&lt;/p&gt;
&lt;p&gt;有些插件用不到，可以注释删除，有些插件没有，可以自行添加（vundle很强大只要github上有都能配置），有些插件快捷键等可以自己去进一步了解&lt;/p&gt;
&lt;p&gt;得到一份符合自己习惯的vim配置，后续能在任何地方进行一键配置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;      &lt;span class="err"&gt;二八定律&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;关注可以最大提升自身生产力的那&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="err"&gt;插件&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;具体要亲自实践&lt;/span&gt;
      &lt;span class="err"&gt;有什么问题&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;先看插件文档说明&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;代码选项&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="err"&gt;上的&lt;/span&gt;&lt;span class="n"&gt;issues&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;
      &lt;span class="err"&gt;你遇到的问题&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;一定别人也遇到了&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;大部分可解决&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;少部分无解…&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;欢迎推荐好用更酷的插件配置:)&lt;/p&gt;
&lt;p&gt;我的配置也会不定期更新，thx&lt;/p&gt;
&lt;p&gt;PS: 这个vim配置是我的&lt;a href="https://github.com/wklken/linux_config"&gt;linux_config&lt;/a&gt;下一部分，如果需要，可以参考，主要是用于一键配置环境&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;配置步骤&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;clone到本地,配置到linux个人目录（如果是从linux_config过来的，不需要clone）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//github.com/wklken/k-vim.git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装依赖包&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;ctags&lt;/span&gt;
&lt;span class="cp"&gt;#brew install ctags     (mac用户)&lt;/span&gt;

&lt;span class="cp"&gt;#使用python需要&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pyflakes&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pylint&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pep8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装插件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;

&lt;span class="n"&gt;sh&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;

&lt;span class="cp"&gt;#会进入安装插件的列表，目前30+个插件，一一安装是从github clone的，完全取决于网速&lt;/span&gt;

&lt;span class="cp"&gt;#安装完插件后，会自动编译YCM，注意，可能编译失败（缺少某些依赖包,暂不支持mac osx 10.9）&lt;/span&gt;
&lt;span class="err"&gt;失败的话手动编译吧，看第&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="err"&gt;步&lt;/span&gt; &lt;span class="err"&gt;编译自动补全&lt;/span&gt;&lt;span class="n"&gt;YouCompleteMe&lt;/span&gt; &lt;span class="err"&gt;（这步耗时也有点长，但绝对值得）&lt;/span&gt;

&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="err"&gt;本质上做的事情&lt;/span&gt;
&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="err"&gt;将&lt;/span&gt;&lt;span class="n"&gt;vimrc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="err"&gt;文件夹软链接到$&lt;/span&gt;&lt;span class="n"&gt;HOME&lt;/span&gt;&lt;span class="err"&gt;，编程系统&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="err"&gt;配置&lt;/span&gt;
&lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt;&lt;span class="err"&gt;安装&lt;/span&gt;&lt;span class="n"&gt;vundle&lt;/span&gt;&lt;span class="err"&gt;（&lt;/span&gt;&lt;span class="n"&gt;clone&lt;/span&gt;&lt;span class="err"&gt;到&lt;/span&gt;&lt;span class="n"&gt;bundle&lt;/span&gt;&lt;span class="err"&gt;目录下）&lt;/span&gt;
&lt;span class="mf"&gt;3.&lt;/span&gt;&lt;span class="err"&gt;通过&lt;/span&gt;&lt;span class="n"&gt;vundle&lt;/span&gt;&lt;span class="err"&gt;安装其他所有插件（相当于进入&lt;/span&gt;&lt;span class="n"&gt;vimrc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;命令行执行&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;BundleInstall&lt;/span&gt;&lt;span class="err"&gt;）&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;从&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="err"&gt;全部搞到本地&lt;/span&gt;
&lt;span class="mf"&gt;4.&lt;/span&gt;&lt;span class="err"&gt;编译需要手动编译的插件，&lt;/span&gt;&lt;span class="n"&gt;eg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;YCM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可能遇到的问题:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编译自动补全YouCompleteMe&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="https://github.com/Valloric/YouCompleteMe"&gt;文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个插件需要Vim 7.3.584,所以,如果vim版本太低,需要&lt;a href="https://github.com/Valloric/YouCompleteMe/wiki/Building-Vim-from-source"&gt;编译安装&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;相对行号&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;vimrc中配置,如果不习惯,可以去掉,&lt;a href="http://jeffkreeftmeijer.com/2012/relative-line-numbers-in-vim-for-super-fast-movement/"&gt;相关参考&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;配置主题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;到vimrc中修改colortheme,可以使用molokai(用惯sublimetext2的童鞋很熟悉)&lt;/p&gt;
&lt;p&gt;默认配置的是&lt;a href="https://github.com/altercation/vim-colors-solarized"&gt;solarized dark主题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;想要修改终端配色为solarized可以参考 &lt;a href="https://github.com/sigurdga/gnome-terminal-colors-solarized"&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;其他&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;安装/卸载/更新插件：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可能发现打开vim很慢，可能是插件有点多了，这个配置插件全开&lt;/p&gt;
&lt;p&gt;去掉某些自己用不到的插件: 编辑vimrc，注释掉插件对应Bundle行即可(加一个双引号),保存退出即可&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="s"&gt;&amp;quot;Bundle &amp;#39;fholgado/minibufexpl.vim&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果想从物理上清除（删除插件文件），注释保存后再次进入vim&lt;/p&gt;
&lt;p&gt;命令行模式，执行:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;BundleClean&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果要安装新插件，在vimrc中加入bundle，然后执行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;BundleInstall&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;更新插件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;BundleUpdate&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;给mac用户&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可以使用mac vim&lt;/p&gt;
&lt;p&gt;首先，安装最新mac vim ,可以正常打开&lt;/p&gt;
&lt;p&gt;然后(需要sudo)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="n"&gt;mv&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bk&lt;/span&gt;
    &lt;span class="n"&gt;ln&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mvim&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后，在.bashrc/.bash_profile中加入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;vi&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;mvim&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;mvim&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;配置完成&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;冲突和问题排查&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;插件很多，并且其默认快捷键或者配置可能发生冲突&lt;/p&gt;
&lt;p&gt;当加入新插件发现有冲突或者展现有问题&lt;/p&gt;
&lt;p&gt;排除法进行排查：注掉所有插件或配置，然后二分法逐一恢复，可以定位到出现问题的插件或配置&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;截图&lt;/h3&gt;
&lt;p&gt;solarized主题&lt;/p&gt;
&lt;p&gt;&lt;img alt="solarized" src="https://github.com/wklken/gallery/blob/master/vim/solarized.png?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;molokai主题&lt;/p&gt;
&lt;p&gt;&lt;img alt="molokai" src="https://github.com/wklken/gallery/blob/master/vim/molokai.png?raw=true" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;自定义快捷键说明&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;F1&lt;/span&gt;  &lt;span class="err"&gt;关掉，防止跳出帮助&lt;/span&gt;
&lt;span class="nx"&gt;F2&lt;/span&gt;  &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nx"&gt;nu&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;nonu&lt;/span&gt;
&lt;span class="nx"&gt;F3&lt;/span&gt;  &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;nolist&lt;/span&gt;
&lt;span class="nx"&gt;F4&lt;/span&gt;  &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nx"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;nowrap&lt;/span&gt;
&lt;span class="nx"&gt;F5&lt;/span&gt;  &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nx"&gt;paste&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;nopaste&lt;/span&gt;
&lt;span class="nx"&gt;F6&lt;/span&gt;  &lt;span class="nx"&gt;syntax&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;off&lt;/span&gt;
&lt;span class="err"&gt;空格&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;开启查找&lt;/span&gt;
&lt;span class="n"&gt;Y&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;   &lt;span class="err"&gt;复制到行尾&lt;/span&gt;
&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;  &lt;span class="err"&gt;以&lt;/span&gt;&lt;span class="nx"&gt;sudo&lt;/span&gt;&lt;span class="err"&gt;的权限保存&lt;/span&gt;
&lt;span class="nx"&gt;kj&lt;/span&gt;   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Esc&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;，不用到角落去按&lt;/span&gt;&lt;span class="nx"&gt;esc&lt;/span&gt;&lt;span class="err"&gt;了&lt;/span&gt;
&lt;span class="nb"&gt;t&lt;/span&gt;    &lt;span class="err"&gt;新起一行，下面，不进入插入模式&lt;/span&gt;
&lt;span class="nb"&gt;T&lt;/span&gt;    &lt;span class="err"&gt;新起一行，上面&lt;/span&gt;
&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;sa&lt;/span&gt;   &lt;span class="err"&gt;全选&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="kc"&gt;all&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;hjkl&lt;/span&gt;  &lt;span class="err"&gt;上下左右，强迫使用，要解开的自己改&lt;/span&gt;
&lt;span class="nx"&gt;ctrl&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;jkhl&lt;/span&gt; &lt;span class="err"&gt;进行上下左右窗口跳转&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;不需要&lt;/span&gt;&lt;span class="nx"&gt;ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;jkhl&lt;/span&gt;

&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;tn&lt;/span&gt;  &lt;span class="nb"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;tab&lt;/span&gt;
&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;tc&lt;/span&gt;  &lt;span class="nx"&gt;tab&lt;/span&gt; &lt;span class="nb"&gt;close&lt;/span&gt;
&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;  &lt;span class="nx"&gt;tab&lt;/span&gt; &lt;span class="nx"&gt;only&lt;/span&gt;
&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;tm&lt;/span&gt;  &lt;span class="nx"&gt;tab&lt;/span&gt; &lt;span class="nx"&gt;move&lt;/span&gt;
&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;te&lt;/span&gt;  &lt;span class="nb"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;tab&lt;/span&gt; &lt;span class="nx"&gt;edit&lt;/span&gt;
&lt;span class="nx"&gt;ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;n&lt;/span&gt;  &lt;span class="err"&gt;相对行号绝对行号变换，默认用相对行号&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;5k&lt;/span&gt;  &lt;span class="err"&gt;在相对行号模式下，往上移动&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="err"&gt;行&lt;/span&gt; &lt;span class="err"&gt;往下移动&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="err"&gt;行&lt;/span&gt;

&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="err"&gt;展示历史剪贴板&lt;/span&gt;
&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;yc&lt;/span&gt; &lt;span class="err"&gt;清空&lt;/span&gt;
&lt;span class="nx"&gt;yy&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;dd&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="err"&gt;可以替换非最近一次剪贴内容&lt;/span&gt;

&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="err"&gt;开启文件搜索&lt;/span&gt; &lt;span class="nx"&gt;ctrlp&lt;/span&gt;
&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="err"&gt;去除匹配高亮&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h3&gt;插件及其快捷键说明&lt;/h3&gt;
&lt;p&gt;图片有点多，展示有点慢，截得不是很专业，耐心看完:)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;插件管理&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/gmarik/vundle"&gt;gmarik/vundle&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;必装,用于管理所有插件&lt;/p&gt;
&lt;p&gt;命令行模式下管理命令:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;BundleInstall&lt;/span&gt;     &lt;span class="n"&gt;install&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;BundleInstall&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;    &lt;span class="n"&gt;update&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;BundleClean&lt;/span&gt;       &lt;span class="n"&gt;remove&lt;/span&gt; &lt;span class="n"&gt;plugin&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;导航及搜索&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/scrooloose/nerdtree"&gt;scrooloose/nerdtree&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;必装,开启目录树导航&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;  &lt;span class="err"&gt;打开&lt;/span&gt; &lt;span class="err"&gt;关闭树形目录结构&lt;/span&gt;

        &lt;span class="err"&gt;在&lt;/span&gt;&lt;span class="n"&gt;nerdtree&lt;/span&gt;&lt;span class="err"&gt;窗口常用操作：&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;小写当前，大写&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.......&lt;/span&gt;&lt;span class="n"&gt;Close&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="n"&gt;nodes&lt;/span&gt; &lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="err"&gt;收起当前目录树&lt;/span&gt;
        &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.......&lt;/span&gt;&lt;span class="n"&gt;Recursively&lt;/span&gt; &lt;span class="n"&gt;refresh&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;刷新根目录树&lt;/span&gt;
        &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.......&lt;/span&gt;&lt;span class="n"&gt;Recursively&lt;/span&gt; &lt;span class="n"&gt;refresh&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="err"&gt;刷新当前目录&lt;/span&gt;
        &lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;.......&lt;/span&gt;&lt;span class="n"&gt;Jump&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.......&lt;/span&gt;&lt;span class="n"&gt;Jump&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="n"&gt;nodes&lt;/span&gt; &lt;span class="n"&gt;parent&lt;/span&gt;
        &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;.......&lt;/span&gt;&lt;span class="n"&gt;Jump&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="n"&gt;inside&lt;/span&gt; &lt;span class="n"&gt;directories&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="n"&gt;tree&lt;/span&gt; &lt;span class="n"&gt;depth&lt;/span&gt;  &lt;span class="err"&gt;到同目录第一个节点&lt;/span&gt;
        &lt;span class="n"&gt;J&lt;/span&gt;&lt;span class="p"&gt;.......&lt;/span&gt;&lt;span class="n"&gt;Jump&lt;/span&gt; &lt;span class="n"&gt;down&lt;/span&gt; &lt;span class="n"&gt;inside&lt;/span&gt; &lt;span class="n"&gt;directories&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="n"&gt;tree&lt;/span&gt; &lt;span class="n"&gt;depth&lt;/span&gt; &lt;span class="err"&gt;最后一个节点&lt;/span&gt;
        &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.......&lt;/span&gt;&lt;span class="n"&gt;Open&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;directories&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;bookmarks&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.......&lt;/span&gt;&lt;span class="n"&gt;Open&lt;/span&gt; &lt;span class="n"&gt;selected&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;split&lt;/span&gt; &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="err"&gt;上下分屏&lt;/span&gt;
        &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.......&lt;/span&gt;&lt;span class="n"&gt;Open&lt;/span&gt; &lt;span class="n"&gt;selected&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;vsplit&lt;/span&gt;&lt;span class="err"&gt;左右分屏&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;演示&lt;/p&gt;
&lt;p&gt;&lt;img alt="thenerdtree" src="https://github.com/wklken/gallery/blob/master/vim/thenerdtree.gif?raw=true" /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/fholgado/minibufexpl.vim"&gt;fholgado/minibufexpl.vim&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;必装，buffer管理, 可以查找其他同类插件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;sd&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;Tab&amp;gt;&lt;/span&gt;  切换buffer
        左右方向键  切换buffer
        ,bn   切到后一个
        ,bp   切到前一个
        ,bd   关闭当前buffer
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/majutsushi/tagbar"&gt;majutsushi/tagbar&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;必装,标签导航,纬度和taglist不同&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;sd&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;F9&amp;gt;&lt;/span&gt; 打开
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;演示&lt;/p&gt;
&lt;p&gt;&lt;img alt="tagbar" src="https://github.com/wklken/gallery/blob/master/vim/tagbar.gif?raw=true" /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/vim-scripts/taglist.vim"&gt;vim-scripts/taglist.vim&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;必装&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;sd&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;F8&amp;gt;&lt;/span&gt;打开
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;演示:&lt;/p&gt;
&lt;p&gt;&lt;img alt="taglist" src="https://github.com/wklken/gallery/blob/master/vim/taglist.png?raw=true" /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/hdima/python-syntax"&gt;kien/ctrlp.vim&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;文件搜索,ack/Command-T需要依赖于外部包,不喜欢有太多依赖的,除非十分强大, 具体 &lt;a href="http://kien.github.io/ctrlp.vim/"&gt;文档&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;  &lt;span class="err"&gt;打开&lt;/span&gt;&lt;span class="n"&gt;ctrlp&lt;/span&gt;&lt;span class="err"&gt;搜索&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;  &lt;span class="err"&gt;相当于&lt;/span&gt;&lt;span class="n"&gt;mru&lt;/span&gt;&lt;span class="err"&gt;功能，&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt; &lt;span class="n"&gt;recently&lt;/span&gt; &lt;span class="n"&gt;opened&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;

    &lt;span class="n"&gt;ctrl&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="err"&gt;进行上下移动&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;演示&lt;/p&gt;
&lt;p&gt;&lt;img alt="ctrip" src="https://github.com/wklken/gallery/blob/master/vim/ctrlp.gif?raw=true" /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;显示增强&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;被动技能&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;无快捷键&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/Lokaltog/vim-powerline"&gt;Lokaltog/vim-powerline&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;必装，状态栏美观&lt;/p&gt;
&lt;p&gt;演示&lt;/p&gt;
&lt;p&gt;&lt;img alt="powerline" src="https://github.com/wklken/gallery/blob/master/vim/powerline.png?raw=true" /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/kien/rainbow_parentheses.vim"&gt;kien/rainbow_parentheses.vim&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;必装,括号高亮&lt;/p&gt;
&lt;p&gt;演示&lt;/p&gt;
&lt;p&gt;&lt;img alt="rainbow" src="https://github.com/wklken/gallery/blob/master/vim/rainbow_parentheses.png?raw=true" /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/Yggdroot/indentLine"&gt;Yggdroot/indentLine&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;选装,装不装看个人喜好了,缩进标识&lt;/p&gt;
&lt;p&gt;另一个类似的,整块背景色的的,&lt;a href="https://github.com/nathanaelkane/vim-indent-guides"&gt;nathanaelkane/vim-indent-guides&lt;/a&gt;,自选吧, 看来看去还是st2的好看,唉&lt;/p&gt;
&lt;p&gt;调整颜色和solarized一致,不至于太显眼影响注意力,可以根据自己主题设置颜色(&lt;a href="http://vim.wikia.com/wiki/Xterm256_color_names_for_console_Vim?file=Xterm-color-table.png"&gt;颜色&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;演示:&lt;/p&gt;
&lt;p&gt;&lt;img alt="indentline" src="https://github.com/wklken/gallery/blob/master/vim/indentline.png?raw=true" /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/bronson/vim-trailing-whitespace"&gt;bronson/vim-trailing-whitespace&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;将代码行最后无效的空格标红&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/altercation/vim-colors-solarized"&gt;altercation/vim-colors-solarized&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;经典主题,目前我使用的,看起来舒服&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/tomasr/molokai"&gt;tomasr/molokai&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;用sublime text2的同学应该很熟悉, 另一个主题,可选,偶尔换换味道&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;快速移动&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;主动技能&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;需要快捷键&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/Lokaltog/vim-easymotion"&gt;Lokaltog/vim-easymotion&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;必装，效率提升杀手锏，跳转到光标后任意位置&lt;/p&gt;
&lt;p&gt;配置(我的leader键配置 let g:mapleader = ',')&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="p"&gt;,,&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;  &lt;span class="err"&gt;跳转&lt;/span&gt;
    &lt;span class="p"&gt;,,&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fe&lt;/span&gt;  &lt;span class="err"&gt;查找&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;快速跳转定位到某个字符位置&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;演示&lt;/p&gt;
&lt;p&gt;&lt;img alt="easy_motion" src="https://github.com/wklken/gallery/blob/master/vim/easymotion.gif?raw=true" /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/vim-scripts/matchit.zip"&gt;vim-scripts/matchit.zip&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;选装&lt;/p&gt;
&lt;p&gt;% 匹配成对的标签，跳转&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;自动补全及快速编辑&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;主动技能&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;需要快捷键&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;高效编辑无上利器&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/Valloric/YouCompleteMe"&gt;Valloric/YouCompleteMe&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;必装，强烈推荐&lt;/p&gt;
&lt;p&gt;YCM是我目前用到的最好的自动补全插件,我只能说，用这个写代码太舒畅了&lt;/p&gt;
&lt;p&gt;需要编译这个插件(见github文档)&lt;/p&gt;
&lt;p&gt;这个需要自己去看官方的配置方式,演示在官方github有&lt;/p&gt;
&lt;p&gt;需要Vim 7.3.584 以上版本(&lt;a href="https://github.com/Valloric/YouCompleteMe/wiki/Building-Vim-from-source"&gt;如何编译vim&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;这个插件包含了以下四个插件功能,所以不需要装下面四个&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="n"&gt;clang_complete&lt;/span&gt;
    &lt;span class="n"&gt;AutoComplPop&lt;/span&gt;
    &lt;span class="n"&gt;Supertab&lt;/span&gt;
    &lt;span class="n"&gt;neocomplcache&lt;/span&gt;
    &lt;span class="n"&gt;jedi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;对&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="err"&gt;的补全&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;快捷键:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;gd&lt;/span&gt;  &lt;span class="err"&gt;跳到声明位置&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;仅&lt;/span&gt; &lt;span class="n"&gt;filetypes&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cpp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;objc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;objcpp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="err"&gt;有效&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/SirVer/ultisnips"&gt;SirVer/ultisnips&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;必装，效率杀手锏，快速插入自定义的代码片段&lt;/p&gt;
&lt;p&gt;自动补全加这个,高效必备, 针对各种语言已经带了一份配置了，可以到安装目录下查看具体，我有针对性补全一份，在snippets目录下，可自行修改&lt;/p&gt;
&lt;p&gt;演示&lt;/p&gt;
&lt;p&gt;&lt;img alt="ultisnips" src="https://github.com/wklken/gallery/blob/master/vim/utilsnips.gif?raw=true" /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/scrooloose/nerdcommenter"&gt;scrooloose/nerdcommenter&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;必装，另一个大大提升效率的地方，快速批量加减注释&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;shift&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="err"&gt;方向键选中&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;默认当前行&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;  &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;cc&lt;/span&gt;  &lt;span class="err"&gt;加上注释&lt;/span&gt;  &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;cu&lt;/span&gt; &lt;span class="err"&gt;解开注释&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;演示&lt;/p&gt;
&lt;p&gt;&lt;img alt="nerdcommenter" src="https://github.com/wklken/gallery/blob/master/vim/nerdcomment.gif?raw=true" /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/tpope/vim-surround"&gt;tpope/vim-surround&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;必装，很给力的功能，快速给词加环绕符号,例如引号&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/tpope/vim-repeat"&gt;tpope/vim-repeat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;repeat进行增强,'.'可以重复命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;cs&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;#39; [inside]&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;Hello world!&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;Hello&lt;/span&gt; &lt;span class="n"&gt;world&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;ds&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;Hello world!&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Hello&lt;/span&gt; &lt;span class="n"&gt;world&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
    &lt;span class="n"&gt;ysiw&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;Hello&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;演示&lt;/p&gt;
&lt;p&gt;&lt;img alt="surround" src="https://github.com/wklken/gallery/blob/master/vim/surround.gif?raw=true" /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/Raimondi/delimitMate"&gt;Raimondi/delimitMate&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;必装，输入引号,括号时,自动补全&lt;/p&gt;
&lt;p&gt;对python的docstring 三引号做了处理(只处理""", '''暂时没配，可以自己加)&lt;/p&gt;
&lt;p&gt;演示&lt;/p&gt;
&lt;p&gt;&lt;img alt="delimitmate" src="https://github.com/wklken/gallery/blob/master/vim/delimate.gif?raw=true" /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/godlygeek/tabular"&gt;godlygeek/tabular&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;选装，代码格式化用的，code alignment&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="err"&gt;按等号切分格式化&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="err"&gt;按逗号切分格式化&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/terryma/vim-expand-region"&gt;terryma/vim-expand-region&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;选装，visual mode selection
   视图模式下可伸缩选中部分，用于快速选中某些块&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;增加选中范围&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;+/=&lt;/span&gt;&lt;span class="err"&gt;按键&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="err"&gt;减少选中范围&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="o"&gt;/-&lt;/span&gt;&lt;span class="err"&gt;按键&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;演示（直接取链到其github图)&lt;/p&gt;
&lt;p&gt;&lt;img alt="expand-region" src="https://raw.github.com/terryma/vim-expand-region/master/expand-region.gif" /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/terryma/vim-multiple-cursors"&gt;vim-multiple-cursors&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;选装，多光标批量操作&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;ctrl&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="err"&gt;开始选择&lt;/span&gt;
    &lt;span class="n"&gt;ctrl&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="err"&gt;向上取消&lt;/span&gt;
    &lt;span class="n"&gt;ctrl&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="err"&gt;跳过&lt;/span&gt;
    &lt;span class="n"&gt;esc&lt;/span&gt;   &lt;span class="err"&gt;退出&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;演示(官方演示图)&lt;/p&gt;
&lt;p&gt;&lt;img alt="multiple-cursors" src="https://raw.github.com/terryma/vim-multiple-cursors/master/assets/example1.gif" /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;语法检查&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/scrooloose/syntastic"&gt;scrooloose/syntastic&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;建议安装，静态语法及风格检查,支持多种语言&lt;/p&gt;
&lt;p&gt;修改了下标记一列的背景色,原有的背景色在solarized下太难看了…..&lt;/p&gt;
&lt;p&gt;演示&lt;/p&gt;
&lt;p&gt;&lt;img alt="syntastic" src="https://github.com/wklken/gallery/blob/master/vim/syntastic.png?raw=true" /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/kevinw/pyflakes-vim"&gt;kevinw/pyflakes-vim&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;虽然这个的作者推荐使用syntastic,但是这个插件对于pythoner还是很需要的&lt;/p&gt;
&lt;p&gt;因为有一个特牛的功能,fly check,即,编码时在buffer状态就能动态查错标记,弥补syntastic只能保存和打开时检查语法错误的不足&lt;/p&gt;
&lt;p&gt;演示
   &lt;img alt="pyflakes" src="https://github.com/wklken/gallery/blob/master/vim/pyflakes.png?raw=true" /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;具体语言&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;主要是&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;  &lt;span class="err"&gt;其它语言以及前端的&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;用得少没有研究使用过&lt;/span&gt;
&lt;span class="n"&gt;python&lt;/span&gt;   &lt;span class="n"&gt;golang&lt;/span&gt;   &lt;span class="n"&gt;markdown&lt;/span&gt;
&lt;span class="err"&gt;需要其它语言支持的&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;可以到&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="err"&gt;上捞&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;上面很多流行的&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="err"&gt;配置&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;eg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;spf13&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;
&lt;span class="err"&gt;以下均为选装，根据自己需要&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/hdima/python-syntax"&gt;python-syntax&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用Python建议安装，python语法高亮,就是python.vim,在github,有维护和更新&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/jnwhiteh/vim-golang"&gt;jnwhiteh/vim-golang&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用golang建议安装， golang语法高亮&lt;/p&gt;
&lt;p&gt;golang刚入门使用,项目中还没正式开始,目前很多golang的手册有配置vim的介绍,后续有需求再弄&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/plasticboy/vim-markdown"&gt;plasticboy/vim-markdown&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;markdown语法,编辑md文件&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/pangloss/vim-javascript"&gt;pangloss/vim-javascript&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;偶尔会看看js,频率不高&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/nono/jquery.vim"&gt;nono/jquery.vim&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;jquery高亮&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/thiderman/nginx-vim-syntax"&gt;thiderman/nginx-vim-syntax&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;nginx配置文件语法高亮,常常配置服务器很有用&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/Glench/Vim-Jinja2-Syntax"&gt;Glench/Vim-Jinja2-Syntax&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;jinja2 语法高亮&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其它扩展增强&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;根据自身需求自取配置&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;不需要的话自己注解&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/vim-scripts/TaskList.vim"&gt;vim-scripts/TaskList.vim&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;查看并快速跳转到代码中的TODO列表&lt;/p&gt;
&lt;p&gt;重构代码时一般通读,标记修改位置,非常实用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;td&lt;/span&gt; &lt;span class="err"&gt;打开&lt;/span&gt;&lt;span class="n"&gt;todo&lt;/span&gt;&lt;span class="err"&gt;列表&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;演示&lt;/p&gt;
&lt;p&gt;&lt;img alt="tasklist" src="https://github.com/wklken/gallery/blob/master/vim/tasklist.gif?raw=true" /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/tpope/vim-fugitive"&gt;tpope/vim-fugitive&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;git插件&lt;/p&gt;
&lt;p&gt;不是很习惯,所以用的次数太少,目前和现有配置快捷键有冲突,尚未解决&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://github.com/sjl/gundo.vim"&gt;sjl/gundo.vim&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;编辑文件时光机&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;  &lt;span class="err"&gt;查看文件编辑历史&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;待考察的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h4&gt;sjl/vitality.vim&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4&gt;vim-scripts/Conque-Shell&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4&gt;vim-scripts/YankRing.vim&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4&gt;vim-scripts/auto.git&lt;/h4&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;p&gt;The End!&lt;/p&gt;
&lt;p&gt;wklken (凌岳/pythoner/vim党预备党员)&lt;/p&gt;
&lt;p&gt;Email: wklken@yeah.net&lt;/p&gt;
&lt;p&gt;Github: https://github.com/wklken&lt;/p&gt;
&lt;p&gt;Blog: http://wklken.me&lt;/p&gt;
&lt;p&gt;2013-06-11 于深圳&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wklken</dc:creator><pubDate>Tue, 11 Jun 2013 00:00:00 +0800</pubDate><guid>tag:wklken.me,2013-06-11:posts/2013/06/11/linux-my-vim.html</guid><category>vim</category><category>linux</category></item><item><title>shell下小抄速查工具cmdcheatsheet[python实现]</title><link>http://wklken.me/posts/2013/05/17/shell-cheat-sheet.html</link><description>&lt;h3&gt;github地址&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/wklken/cmdcheatsheet"&gt;打开&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;需求&lt;/h3&gt;
&lt;p&gt;最近老是要翻配置文档/wiki/history/笔记/google等等，为的仅仅是拿个服务器地址，或者一个密码，异或一条复杂点常用但懒得打的命令，次数多了自己也烦了，低效耗时，伤不起&lt;/p&gt;
&lt;h3&gt;优化&lt;/h3&gt;
&lt;p&gt;把常用的东西，记不住的东西，写到文本配置里，在shell下通过一个命令+关键字，秒杀获取想要的内容&lt;/p&gt;
&lt;h3&gt;效果&lt;/h3&gt;
&lt;p&gt;&lt;img alt="use_img" src="https://github.com/wklken/gallery/blob/master/tools/cmdcheatsheet.png?raw=true" /&gt;&lt;/p&gt;
&lt;h3&gt;实现方法&lt;/h3&gt;
&lt;p&gt;1.配置文件格式：yaml&lt;/p&gt;
&lt;p&gt;配置关键字，多行内容，读取，用python非常方便&lt;/p&gt;
&lt;p&gt;2.建索引文件cheatsheet.py&lt;/p&gt;
&lt;p&gt;很简单的处理&lt;/p&gt;
&lt;p&gt;3.一键安装文件install.sh&lt;/p&gt;
&lt;p&gt;安装&lt;/p&gt;
&lt;h3&gt;后续改进&lt;/h3&gt;
&lt;p&gt;1.模糊匹配&lt;/p&gt;
&lt;p&gt;2.读索引而非每次建索引&lt;/p&gt;
&lt;p&gt;3.更友好的提示方式&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wklken</dc:creator><pubDate>Fri, 17 May 2013 00:00:00 +0800</pubDate><guid>tag:wklken.me,2013-05-17:posts/2013/05/17/shell-cheat-sheet.html</guid><category>python</category><category>linux</category></item><item><title>如何进行shell脚本正确性测试</title><link>http://wklken.me/posts/2012/09/15/how-to-test-shell.html</link><description>&lt;p&gt;在实际工作中，需要对shell脚本进行正确性测试。&lt;/p&gt;
&lt;p&gt;如何用最快最有效的方式进行测试？&lt;/p&gt;
&lt;p&gt;很多开发的习惯是，二话不说，写完/拿到，就跑一把，看看输入，输出，想要的操作是否完成，也就过了。&lt;/p&gt;
&lt;p&gt;其实这是十分不严谨的，若是未经过QA，风险还是相当大的。&lt;/p&gt;
&lt;p&gt;以下即shell脚本测试流程，仅供参考&lt;/p&gt;
&lt;p&gt;1.代码走读：&lt;/p&gt;
&lt;p&gt;写完，或者拿到一个shell脚本，不必急于运行，虽然实践是检验整理的唯一标准，但是，在读代码这个过程中，可以规避很多低级的bug.&lt;/p&gt;
&lt;p&gt;读什么？&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;代码逻辑，这个脚本用来做什么，主要分为多少步，分别做了什么事情？&lt;/span&gt;
  &lt;span class="err"&gt;用于检查是否有遗漏逻辑，或有悖于需求。&lt;/span&gt;
&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;具体语法，变量，判断语句&lt;/span&gt;
  &lt;span class="err"&gt;语法方面的东西，变量是否定义，判断语句逻辑是否正确，是否考虑各种异常，错误是否退出，返回正确状态值等。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2.语法检测：&lt;/p&gt;
&lt;p&gt;shell的语法还是相当让人无语的，很多很容易疏忽遗漏的地方&lt;/p&gt;
&lt;p&gt;命令格式：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sh&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;***&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;若是没有异常输出，证明脚本没有明显的语法问题。&lt;/p&gt;
&lt;p&gt;&lt;img alt="运行结果" src="https://github.com/wklken/gallery/blob/master/shell_test/shell_test_1.jpg?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;3.运行跟踪：&lt;/p&gt;
&lt;p&gt;实践是检验整理的唯一标准，跑一把。&lt;/p&gt;
&lt;p&gt;不过，可不是直接运行然后去看最终结果，这样会遗漏掉很多中间过程。&lt;/p&gt;
&lt;p&gt;命令格式:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sh&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;vx&lt;/span&gt; &lt;span class="o"&gt;***&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;得到效果如下:&lt;/p&gt;
&lt;p&gt;&lt;img alt="运行结果" src="https://github.com/wklken/gallery/blob/master/shell_test/shell_test_2.jpg?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;我们可以看到&lt;/p&gt;
&lt;p&gt;每行代码原始命令（无+的）:[这是-v的效果]&lt;/p&gt;
&lt;p&gt;代码执行时的情况（带+），包括运算结果，逻辑判断结果，变量赋值等等[-x的效果]&lt;/p&gt;
&lt;p&gt;而我们所要关注的就是这些信息，主要是变量值和逻辑判断结果。&lt;/p&gt;
&lt;p&gt;4.覆盖分支：&lt;/p&gt;
&lt;p&gt;直接跑，只能覆盖到主体流程，对于其他控制流分支的代码是无法覆盖到的。&lt;/p&gt;
&lt;p&gt;对于关键性的，重点的逻辑，我们需要制造条件，使运行脚本可以进入对应分支&lt;/p&gt;
&lt;p&gt;5.其他：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;关于&lt;/span&gt;&lt;span class="n"&gt;bashdb&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="err"&gt;可以尝试下，但是感觉投入产出比不高&lt;/span&gt;
&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;关于单元测试：&lt;/span&gt;
  &lt;span class="err"&gt;实际工作中，由于项目压力比较大，单元测试的成本还是相当高的，所以目前为止没有。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;6.有没有更好的方式?&lt;/p&gt;
&lt;p&gt;好吧，单步跟踪，脚本短的还好，日志信息不会太多，要是多了，存在调用其他脚本等等.....&lt;/p&gt;
&lt;p&gt;日志量达到几千行，这是很轻易的事情。&lt;/p&gt;
&lt;p&gt;跟踪过的童鞋有同感，展现不够友好，惨白惨白一片，一千行下来，看的眼花。&lt;/p&gt;
&lt;p&gt;很容易遗漏（LZ被坑了好多回，你看，或不看......错误信息明明就在那里，就是视而不见）&lt;/p&gt;
&lt;p&gt;So.进行了一层优化，对日志进行处理，使用正则，标注我关心的信息&lt;/p&gt;
&lt;p&gt;效果图对比：&lt;/p&gt;
&lt;p&gt;&lt;img alt="原始图" src="https://github.com/wklken/gallery/blob/master/shell_test/shell_test_3.jpg?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="扩展图" src="https://github.com/wklken/gallery/blob/master/shell_test/shell_test_4.jpg?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;脚本是用python实现的，位置:https://github.com/wklken/pytools/tree/master/shell&lt;/p&gt;
&lt;p&gt;思想是：执行，抓到所有日志，用正则进行匹配，打上颜色，然后输出&lt;/p&gt;
&lt;p&gt;好了，就这些&lt;/p&gt;
&lt;p&gt;工具的实现是为了提高效率，节约时间。&lt;/p&gt;
&lt;p&gt;The end!&lt;/p&gt;
&lt;p&gt;wklken&lt;/p&gt;
&lt;p&gt;Gighub: https://github.com/wklken&lt;/p&gt;
&lt;p&gt;Blog: http://wklken.me&lt;/p&gt;
&lt;p&gt;2012-09-15&lt;/p&gt;
&lt;p&gt;转载请注明出处，谢谢！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wklken</dc:creator><pubDate>Sat, 15 Sep 2012 00:00:00 +0800</pubDate><guid>tag:wklken.me,2012-09-15:posts/2012/09/15/how-to-test-shell.html</guid><category>python</category><category>shell</category></item></channel></rss>